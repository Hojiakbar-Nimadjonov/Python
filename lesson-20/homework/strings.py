import sqlite3
import pandas as pd

# –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö chinook
conn = sqlite3.connect("task/chinook.db")

query = """
SELECT 
    Customer.CustomerId,
    Customer.FirstName || ' ' || Customer.LastName AS FullName,
    SUM(Invoice.Total) AS TotalSpent
FROM Invoice
JOIN Customer ON Invoice.CustomerId = Customer.CustomerId
GROUP BY Customer.CustomerId
"""
customer_spending = pd.read_sql_query(query, conn)

top_5_customers = customer_spending.sort_values(by='TotalSpent', ascending=False).head(5)
print(top_5_customers[['CustomerId', 'FullName', 'TotalSpent']])
# 1. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø–æ–∫—É–ø–∫–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤ (InvoiceLine —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç—Ä–µ–∫–∏)
purchases = pd.read_sql_query("""
    SELECT 
        il.InvoiceId,
        i.CustomerId,
        t.TrackId,
        t.AlbumId
    FROM InvoiceLine il
    JOIN Invoice i ON il.InvoiceId = i.InvoiceId
    JOIN Track t ON il.TrackId = t.TrackId
""", conn)

# 2. –£–∑–Ω–∞—ë–º, —Å–∫–æ–ª—å–∫–æ —Ç—Ä–µ–∫–æ–≤ –≤—Å–µ–≥–æ –≤ –∫–∞–∂–¥–æ–º –∞–ª—å–±–æ–º–µ
album_track_counts = pd.read_sql_query("""
    SELECT AlbumId, COUNT(TrackId) as TotalTracks
    FROM Track
    GROUP BY AlbumId
""", conn)

# 3. –°—á–∏—Ç–∞–µ–º, —Å–∫–æ–ª—å–∫–æ —Ç—Ä–µ–∫–æ–≤ –∏–∑ –∫–∞–∂–¥–æ–≥–æ –∞–ª—å–±–æ–º–∞ –∫—É–ø–∏–ª –∫–∞–∂–¥—ã–π –∫–ª–∏–µ–Ω—Ç
client_album_purchases = purchases.groupby(['CustomerId', 'AlbumId']).agg(
    PurchasedTracks=('TrackId', 'nunique')
).reset_index()

# 4. –û–±—ä–µ–¥–∏–Ω—è–µ–º —Å –æ–±—â–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Ç—Ä–µ–∫–æ–≤ –≤ –∞–ª—å–±–æ–º–µ
client_album_merged = client_album_purchases.merge(album_track_counts, on='AlbumId')

# 5. –û—Ç–º–µ—á–∞–µ–º, –∫—É–ø–∏–ª –ª–∏ –∫–ª–∏–µ–Ω—Ç –≤–µ—Å—å –∞–ª—å–±–æ–º
client_album_merged['BoughtFullAlbum'] = client_album_merged['PurchasedTracks'] == client_album_merged['TotalTracks']

# 6. –°—á–∏—Ç–∞–µ–º –∫–ª–∏–µ–Ω—Ç–æ–≤, –∫—É–ø–∏–≤—à–∏—Ö –•–û–¢–Ø –ë–´ –û–î–ò–ù –ø–æ–ª–Ω—ã–π –∞–ª—å–±–æ–º
customers_full_album = client_album_merged.groupby('CustomerId')['BoughtFullAlbum'].any().reset_index()
customers_full_album['Preference'] = customers_full_album['BoughtFullAlbum'].apply(
    lambda x: 'Albums' if x else 'Tracks'
)
summary = customers_full_album['Preference'].value_counts(normalize=True) * 100
print(summary)
print("üèÜ –¢–æ–ø-5 –∫–ª–∏–µ–Ω—Ç–æ–≤ –ø–æ —Å—É–º–º–µ –ø–æ–∫—É–ø–æ–∫:")
print(top_5_customers[['CustomerId', 'FullName', 'TotalSpent']])

print("\nüìä –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤:")
print(summary)
print("üèÜ –¢–æ–ø-5 –∫–ª–∏–µ–Ω—Ç–æ–≤ –ø–æ —Å—É–º–º–µ –ø–æ–∫—É–ø–æ–∫:")
print(top_5_customers[['CustomerId', 'FullName', 'TotalSpent']])

print("\nüìä –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤:")
print(summary)
